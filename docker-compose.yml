version: '3.7'

services:
  api:
    restart: unless-stopped
    container_name: api
    build:
      context: ./api
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npx prisma migrate dev --name init && npm run start"
    env_file:
      - ./api/.env
    depends_on:
      - postgres
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`cluster-2022-2.dopolytech.fr`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"

  client:
    restart: unless-stopped
    container_name: client
    build:
      context: ./client
    depends_on:
      - traefik
    ports:
      - "8082:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`cluster-2022-2.dopolytech.fr`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"

  postgres:
    restart: unless-stopped
    image: postgres:15-alpine
    container_name: postgres
    env_file:
      - ./api/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  traefik:
    restart: unless-stopped
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=remi.espie@etu.umontpellier.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"

volumes:
  pgdata:
